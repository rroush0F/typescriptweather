{"version":3,"sources":["components/Display.tsx","components/Fetch.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Display","props","city","temperature","weather","Weather","success","pos","crd","coords","lat","latitude","lon","longitude","setState","fetch","state","then","res","json","main","temp","name","description","navigator","geolocation","getCurrentPosition","this","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAWeA,EATC,SAACC,GACb,OACI,gCACI,kDAAqBA,EAAMC,KAA3B,KAAmCD,EAAME,eACzC,8DAAiCF,EAAMC,KAAvC,KAA+CD,EAAMG,eCiDlDC,E,kDA3CX,WAAYJ,GAAa,IAAD,8BACpB,cAAMA,IASVK,QAAU,SAACC,GACP,IAAIC,EAAMD,EAAIE,OACRC,EAAcF,EAAIG,SAClBC,EAAcJ,EAAIK,UACxB,EAAKC,SAAS,CACVH,SAAUD,EACVG,UAAWD,IAGnBG,MAAM,uDAAD,OAAwD,EAAKC,MAAML,SAAnE,gBAAmF,EAAKK,MAAMH,UAA9F,2DACJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKL,SAAS,CACdX,YAAagB,EAAKC,KAAKC,KACvBnB,KAAMiB,EAAKG,KACXlB,QAASe,EAAKf,QAAQ,GAAGmB,kBAvBzB,EAAKP,MAAO,CACRL,SAAU,EACVE,UAAW,EACXX,KAAM,GACNE,QAAS,GACTD,YAAa,GAPG,E,qDA8BxB,WACIqB,UAAUC,YAAYC,mBAAmBC,KAAKrB,W,oBAGlD,WACI,OACI,8BACI,cAAC,EAAD,CAASH,YAAawB,KAAKX,MAAMb,YAAaD,KAAMyB,KAAKX,MAAMd,KAAME,QAASuB,KAAKX,MAAMZ,gB,GAtCnFwB,aCCPC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.59e70e39.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Display = (props: any) => {\r\n    return(\r\n        <div>\r\n            <h2>Current Temp in {props.city}: {props.temperature}</h2>\r\n            <h2>What is the weather like in {props.city}? {props.weather}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React, {Component} from 'react'\r\nimport Display from './Display'\r\n\r\ntype Location ={\r\n    latitude: number,\r\n    longitude: number,\r\n    city: string,\r\n    weather: string,\r\n    temperature: number,\r\n};\r\n\r\nclass Weather extends Component <{},Location>{\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state ={\r\n            latitude: 0,\r\n            longitude: 0,\r\n            city: \"\",\r\n            weather: \"\",\r\n            temperature: 0,\r\n        } \r\n    }\r\n    success = (pos:any) => {\r\n        let crd = pos.coords;\r\n        const lat: number = crd.latitude;\r\n        const lon: number = crd.longitude;\r\n        this.setState({\r\n            latitude: lat,\r\n            longitude: lon\r\n        });\r\n    \r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&units=imperial&appid=a0d71e6c231ea88707788a141e394c4a`)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n        this.setState({\r\n        temperature: json.main.temp,\r\n        city: json.name,\r\n        weather: json.weather[0].description,\r\n    })\r\n    });\r\n}\r\n\r\n    componentDidMount(){\r\n        navigator.geolocation.getCurrentPosition(this.success)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Display temperature={this.state.temperature} city={this.state.city} weather={this.state.weather} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","import logo from './logo.svg';\nimport './App.css'\nimport Weather from './components/Fetch'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}